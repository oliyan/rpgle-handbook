**free
// -------------------------------------------------------------------------------------------------
// PROGRAM NAME: RVR
// DESCRIPTION : To Reverse the String and align it as per user's choice. (Right. Left or Centered)
//
//
// -------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------
// Definition of program control statements.
// -------------------------------------------------------------------------------------------------
  ctl-opt dftactgrp(*no) ;

// -------------------------------------------------------------------------------------------------
// Definition of display file.
// -------------------------------------------------------------------------------------------------
  dcl-f rvrd workstn;

// -------------------------------------------------------------------------------------------------
// Definition of procedures
// -------------------------------------------------------------------------------------------------
  dcl-pr IsPrimeNumber char(1);
    thisNumber packed(2);
  end-pr;

// -------------------------------------------------------------------------------------------------
// Definition of Standalone Variables
// -------------------------------------------------------------------------------------------------
  dcl-s primeCount packed(2) inz(0);
  dcl-s thisNum packed(2) inz(1);
  dcl-s result char(52);

// -------------------------------------------------------------------------------------------------
// Definition of Constants
// -------------------------------------------------------------------------------------------------
  dcl-c TRUE const('1');
  dcl-c START const(1);
  dcl-c END const(100);

*inlr = TRUE;

// -------------------------------------------------------------------------------------------------
// Start of the Main logic
// -------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------
// End of the Main logic
// -------------------------------------------------------------------------------------------------
return;

dcl-proc IsPrimeNumber export;
  dcl-pi *n char(1);
    thisNumb packed(2);
  end-pi;

  dcl-s end packed(3);
  dcl-s count packed(3);

  dcl-c TRUE const('1');
  dcl-c FALSE const('0');
  dcl-c START const(2);

  end = %int(thisNumb/START);

  if thisNumb < START;
    return FALSE;
  endif;

  for count = START to end;
    if %rem(thisNumb:count) = 0;
      return FALSE;
    endif;
  endfor;

  return TRUE;
end-proc;
